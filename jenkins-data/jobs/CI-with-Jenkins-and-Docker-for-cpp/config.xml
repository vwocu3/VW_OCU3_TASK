<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1236.vc3a_d1602f439">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2114.v2654ca_721309"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2114.v2654ca_721309">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>CI-with-Jenkins-and-Docker-for-cpp</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.35.0">
      <projectUrl>https://github.com/NaPiZip/CI-with-jenkins-and-docker-for-cpp.git/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2759.v87459c4eea_ca_">
    <script>pipeline {
    agent { label &apos;master&apos; }
    stages {
        stage(&apos;set_vars&apos;) {
            steps {
                script {
                  currentBuild.displayName = &quot;Build No.:${BUILD_NUMBER}&quot;
                  currentBuild.description = &quot;CI-with-jenkins-and-docker-for-cpp&quot;
                }
            }
        }
        stage(&apos;build&apos;) {
            steps {
                sh &quot;./build_full.sh&quot;
            }
        }
        stage(&apos;gen_report&apos;) {
            steps {
                xunit(
                  [CTest(deleteOutputFiles: true,
                        failIfNotNew: true,
                        pattern: &apos;build/Testing/**/Test.xml&apos;,
                        skipNoTestFiles: false,
                        stopProcessingIfError: true)]
                     )
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>